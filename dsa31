class Solution {
    public:
    int findCity(int n, int m, vector<vector<int>>& edges,int distanceThreshold) {
        
        //adjacency matrix
        vector<vector<int>> floyd(n,vector<int>(n,1e9));
        for(auto it:edges)
        {
            floyd[it[0]][it[1]]=it[2];
            floyd[it[1]][it[0]]=it[2];
        }
        
        //floyd warshall
        for(int via=0;via<n;via++)
        {
            for(int i=0;i<n;i++)
            {
                for(int j=0;j<n;j++)
                floyd[i][j]=min(floyd[i][j],floyd[i][via]+floyd[via][j]);
            }
        }
        
        //City With the Smallest Number of Neighbors at a Threshold Distance
        int node=-1;
        int mini=1e9;
        for(int i=0;i<n;i++)
        {
            int cnt=0;
            for(int j=0;j<n;j++)
            {
                if(i==j)
                continue;
                
                if(floyd[i][j]<=distanceThreshold)
                cnt++;
            }
            
            if(cnt<mini)
            {
                mini=cnt;
                node=i;
            }
            else if(cnt==mini)
            node=max(node,i);
        }
        return node;
    }
};
